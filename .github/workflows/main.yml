name: Auto Update

on:
  push:
  issue_comment:
    types: [ created ]
  schedule:
    - cron: '10 0/1 * * *'

jobs:
  AutoUpdate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GetScript
        uses: actions/checkout@v3
        with:
          repository: ArknightsSearch/ArknightsSearch-data
          path: script

      - name: GetGameData
        uses: actions/checkout@v3
        with:
          repository: Kengxxiao/ArknightsGameData
          path: gamedata

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip wheel setuptools
          pip install -r script/requirements.txt
          pip install aiohttp

      - name: Update
        run: |
          source venv/bin/activate
          python script/start.py
          python .github/scripts/update.py

      - name: Upload
        env:
          SERVER: ${{ secrets.SERVER }}
          KEY: ${{ secrets.KEY }}
        run: |
          source venv/bin/activate
          python .github/scripts/upload.py
        if: env.update == 1

      - name: Commit Change
        run: |
          source venv/bin/activate
          python .github/scripts/commit.py
          git push
        if: env.update == 1

      - name: Generate Token
        id: token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_KEY }}
          repository: Arkfans/ArknightsName
        if: env.update == 1

      - name: GetResourceRepo
        uses: actions/checkout@v3
        with:
          repository: ArknightsSearch/ArknightsSearch-resource
          path: resource
          token: ${{ steps.token.outputs.token }}
        if: env.update == 1

      - name: Commit Resource Change
        env:
          MESSAGE: ${{ env.MESSAGE }}
        run: |
          cp -rf data resource/data
          cd resource
          git add data
          git commit -m $MESSAGE
          git push
        if: env.update == 1
